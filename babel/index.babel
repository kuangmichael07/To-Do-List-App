var Panel = ReactBootstrap.Panel, Accordion = ReactBootstrap.Accordion;
var Button = ReactBootstrap.Button, Input = ReactBootstrap.Input;
var ButtonToolbar = ReactBootstrap.ButtonToolbar;
var Modal = ReactBootstrap.Modal;
var ListGroup = ReactBootstrap.ListGroup,ListGroupItem = ReactBootstrap.ListGroupItem;

// Load Items or set default Items
var items = [
  {title: "Grocery", content: "Beverage 15% Off in Kroger"}, 
  {title: "Workout", content: "Marathon training: Week  5, Day 4"}, 
  {title: "Buy books", content: "Find 'Learning React O'Reilly'"}
], globalTitle = "", globalContent = ""; // Define global title and content


// ToDoList class. This holds all items.
var ToDoList = React.createClass({
  render: function() {
    return (
      <div>
        <Accordion>
          {this.props.data}
        </Accordion>
      </div>
    );
  }
});

// Item class. This is the display for a item in ToDoList
var Item = React.createClass({
  remove: function() {
    items.splice(this.props.index, 1);
    update();
  },
  edit: function() {
    globalTitle = this.props.title;
    globalContent = this.props.content;
    document.getElementById("show").click();
  },
  render: function() {
    return (
      <div>
        <h4 className="text-center">What to Do?</h4><hr/>
        <p>{this.props.content}</p>
        <ButtonToolbar>
          <Button class="delete" bsStyle="danger" id={"btn-del"+this.props.index} onClick={this.remove}>Delete</Button>
          <Button bsStyle="default" id={"btn-edit"+this.props.index} onClick={this.edit}>Edit</Button>
        </ButtonToolbar>
      </div>
    );
  }
});

// RecipeAdd class. This contains the Modal and Add Recipe button
var RecipeAdd = React.createClass({
  getInitialState: function() {
    return { showModal: false };
  },
  close: function() {
    globalTitle = "";
    globalContent = "";
    this.setState({ showModal: false });
  },
  open: function() {
    this.setState({ showModal: true });
    if (document.getElementById("title") && document.getElementById("content")) {
      $("#title").val(globalTitle);
      $("#content").val(globalContent);
      if (globalTitle != "") {
        $("#modalTitle").text("Edit What to Do");
        $("#addButton").text("Finish Edit");
      }
    }
    else requestAnimationFrame(this.open);
  },
  add: function() {
    var title = document.getElementById("title").value;
    var content = document.getElementById("content").value;
    var exists = false;
    for (var i = 0; i < items.length; i++) {
      if (items[i].title === title) {
        items[i].content = content;
        exists = true;
        break;
      }
    }
    if (!exists) {
      if (title.length < 1) title = "Untitled";
      items.push({title: title, content: content});
    }
    update();
    this.close();
  },
  render: function() {
    return (
      <div>
        <Button
          bsStyle="primary"
          bsSize="large"
          onClick={this.open}
          id="show"
        >
          Add a New Target
        </Button>
        <Modal show={this.state.showModal} onHide={this.close}>
          <Modal.Header closeButton>
            <Modal.Title id="modalTitle">Add a New Target</Modal.Title>
          </Modal.Header>
          <Modal.Body>
            <form>
              <Input type="text" label="What to Do?" placeholder="a new target" id="title" />
              <Input type="textarea" label="Content" placeholder="notes" id="content"/>
            </form>
          </Modal.Body>
          <Modal.Footer>
            <Button onClick={this.add} bsStyle="primary" id="addButton">Add a New Target</Button>
            <Button onClick={this.close}>Close</Button>
          </Modal.Footer>
        </Modal>
      </div>
    );
  }
});

// Update function to display all the items
function update() {
  localStorage.setItem("items", JSON.stringify(items));
  var rows = [];
  for (var i=0; i < items.length; i++) {
    rows.push(
      <Panel header={items[i].title} eventKey={i} bsStyle="success">
        <Item title={items[i].title} content={items[i].content} index={i}/>
      </Panel>
    );
  }
  ReactDOM.render(<ToDoList data={rows}/>, document.getElementById("container"));
}

// Render the add button (and modal)
update(); // Initially render the recipe book
ReactDOM.render(<RecipeAdd/>, document.getElementById("button"));
